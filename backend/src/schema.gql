# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Choice {
  choice_text: String!
  created_at: DateTime!
  id: ID!
  question_id: ID!
  updated_at: DateTime!
}

input CreateChoiceInput {
  choice_text: String!
}

input CreateOrganizationInput {
  description: String!
  name: String!
}

input CreateQuestionInput {
  choices: [CreateChoiceInput!]
  is_required: Boolean!
  question_text: String!
  question_type: QuestionType!
}

input CreateQuestionnaireInput {
  description: String!
  expiry_date: DateTime
  is_public: Boolean!
  organization_ids: [ID!]!
  questions: [CreateQuestionInput!]!
  title: String!
  user_id: ID!
}

input CreateRoleInput {
  description: String!
  name: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
  password_hash: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createChoice(input: CreateChoiceInput!): Choice!
  createOrganization(input: CreateOrganizationInput!): Organization!
  createQuestion(input: CreateQuestionInput!): Question!
  createQuestionnaire(input: CreateQuestionnaireInput!): Questionnaire!
  createRole(input: CreateRoleInput!): Role!
  createUser(input: CreateUserInput!): User!
  deleteChoice(id: String!): Boolean!
  deleteOrganization(id: String!): Boolean!
  deleteQuestion(id: String!): Boolean!
  deleteQuestionnaire(id: String!): Boolean!
  deleteRole(id: String!): Boolean!
  deleteUser(id: String!): Boolean!
  updateChoice(input: UpdateChoiceInput!): Choice!
  updateOrganization(input: UpdateOrganizationInput!): Organization!
  updateQuestion(input: UpdateQuestionInput!): Question!
  updateQuestionnaire(input: UpdateQuestionnaireInput!): Questionnaire!
  updateRole(input: UpdateRoleInput!): Role!
  updateUser(input: UpdateUserInput!): User!
}

type Organization {
  created_at: DateTime!
  description: String!
  id: ID!
  name: String!
  questionnaires: [Questionnaire!]
  updated_at: DateTime!
  user: [User!]
}

type Query {
  choice(id: String!): Choice!
  choices: [Choice!]!
  organization(id: String!): Organization!
  organizations: [Organization!]!
  question(id: String!): Question!
  questionnaire(id: String!): Questionnaire!
  questionnaires: [Questionnaire!]!
  questionnairesByUserId(userId: String!): [Questionnaire!]!
  questions: [Question!]!
  role(id: String!): Role!
  roles: [Role!]!
  user(id: String!): User!
  users: [User!]!
}

type Question {
  choices: [Choice!]!
  created_at: DateTime!
  id: ID!
  is_required: Boolean!
  question_text: String!
  question_type: QuestionType!
  questionnaire_id: ID!
  updated_at: DateTime!
}

"""The supported question types"""
enum QuestionType {
  FREE_TEXT
  MULTIPLE_CHOICE
  SINGLE_CHOICE
}

type Questionnaire {
  access_url: String!
  created_at: DateTime
  description: String!
  expiry_date: DateTime
  id: ID!
  is_public: Boolean!
  organizations: [Organization!]
  questions: [Question!]!
  title: String!
  updated_at: DateTime
  user_id: ID!
}

type Role {
  created_at: DateTime!
  description: String!
  id: ID!
  name: String!
  updated_at: DateTime!
  users: [User!]
}

input UpdateChoiceInput {
  choice_text: String
  id: ID!
}

input UpdateOrganizationInput {
  description: String
  id: ID!
  name: String
}

input UpdateQuestionInput {
  id: ID!
  is_required: Boolean
  question_text: String
  question_type: QuestionType
}

input UpdateQuestionnaireInput {
  description: String
  expiry_date: DateTime
  id: ID!
  is_public: Boolean
  title: String
}

input UpdateRoleInput {
  description: String
  id: ID!
  name: String
}

input UpdateUserInput {
  email: String
  id: ID!
  name: String
  password: String
}

type User {
  created_at: DateTime!
  email: String!
  id: ID!
  name: String!
  organizations: [Organization!]
  roles: [Role!]
  updated_at: DateTime!
}